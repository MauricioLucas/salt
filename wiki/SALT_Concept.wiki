#summary This is the base Concept of this project. Note: The following Concept is just a conversation base and subject to change.

=*SALT*=


=1.	Backend=
The Server, which host the full StdLib with a unique StdLib ID.
  * StdLib function code
  * Version information
  * Dependencies
  * License, Coder
Server is mirrored to give redundancy. Open API to submit and get data.

==1.1	Web Frontend==
===1.1.1	User Account===
Authenticate Users. (Trusted developers and so on…) Allow edit/update owned StdLib’s. May use the autohotkey.com User/PW; to authenticate.
===1.1.2	Create StdLib Form===
Submit new StdLib Functions. Except some trusted coders, the submitted code is reviewed by SALT staff, before it’s added to the downloadable Contend of the Client. 

Unlike that, Submitted StdLib’s (or modifications; new versions) are instantly accessible true the *SALT-StdLib-Frontend* for every one. So after creation/Update from the StdLib, the developer can post the *SALT-StdLib-Frontend* Link to the AHK Forum, and doesn't have to wait until his code is checked.

===1.1.3	SALT-StdLib-Frontend===
This provides an online StdLib Code review – as it’s done until now in the AHK Forum for anyone. So the Developer has only to create a new StdLib on SALT and can back link from the AHK Forum to the *SALT-StdLib-Frontend*  This prevents Developers from having multiple places where they have to take care to have their StdLib’s up to date.

===1.1.4	Edit StdLib-Frontend===
The owner of a StdLib Project can easily edit/update his StdLib. Here rules the same policy which is used by the creation of a StdLib:
The Update is instantly accessible true the *SALT-StdLib-Frontend* to give the same possibilities that exist now. But (except of trusted Developer), the Update isn’t available to the SALT-Client, until the SALT-Staff has reviewed the code and marked as secure.

In Fact, this is the Main advantage to the “Forum/Thread-Hosted-Code” Version of Salt. So it’s much more secure to the users.
==1.2	SALT Client==

The SALT-Client is a Service that runs in background of any AHK Developer/User. Features:
* Keep Existing StdLib’s up to date
* Automatic Install StdLib’s which depends on another.
* Browse Existing StdLib’s; Search by Keywords.
* SALT-Client has an open API, therefore Scripts ca use it to get the SALT-Client installing StdLib’s on which the Script itself depend on.
